{"version":3,"sources":["serviceWorker.js","components/Login.jsx","socket.js","containers/Home.jsx","components/PlayerChevron.jsx","components/Register.jsx","components/RegisterModal.jsx","components/LoginModal.jsx","components/ActionButtons/FoldButton.jsx","components/ActionButtons/CheckButton.jsx","components/ActionButtons/CallButton.jsx","components/ActionButtons/RaiseButton.jsx","components/ActionBar.jsx","containers/Table.jsx","components/Nav.jsx","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Login","props","useState","email","setEmail","password","setPassword","className","onSubmit","event","url","preventDefault","axios","post","withCredentials","response","data","username","FormGroup","controlId","bssize","FormLabel","FormControl","autoFocus","type","value","onChange","e","target","Button","block","disabled","length","socket","socketIOClient","Home","emit","on","gameid","history","push","onClick","this","handleClick","bind","Component","PlayerChevron","gameHash","userid","my_id","balance","status","seat","id","info","Card","style","width","Body","Title","Text","src","card1","card2","Register","name","setName","ops","_id","React","LoginModal","context","handleShow","handleClose","show","setState","Modal","onHide","Header","closeButton","FoldButton","actionpackage","hash","action","CallButton","RaiseButton","amt","ActionBar","actions","CheckButton","Table","seats","pathname","slice","res","publicData","JSON","parse","gameData","privateData","bettingRound","actionOn","nextActionsAvailable","map","i","MyNav","loginModalRef","showModal","onLoginClick","button","href","Navbar","ref","Brand","Toggle","Collapse","App","logged_in","game_id","to","path","exact","component","render","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b5d108e1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport axios from 'axios';\n\nexport default function Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    var url;\n    if(process.env.NODE_ENV === 'production')\n      url='https://www.fartmanjack.heroku.com/login';\n    else\n      url='http://127.0.0.1:3000/login';\n\n\n    axios.post(url, {\n        email:email,\n        password:password\n    },{withCredentials: true}).then(response => {\n        console.log(response) \n            if(response.data.username) {\n                console.log('seccessful login')\n                \n                \n            }else {\n                console.log(\"Sign in error\")\n            }\n        }\n    )\n}\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bssize=\"large\">\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bssize=\"large\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block bssize=\"large\" disabled={!validateForm()} type=\"submit\">\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n}","import socketIOClient from \"socket.io-client\";\n\nconst production  = 'https://fartmanjack.herokuapp.com:3000';\nconst development = 'http://localhost:3000/';\nconst url = (process.env.NODE_ENV ? production : development);\n\nconst socket = socketIOClient(url);\n\n\nexport default socket;\n","import React, { Component } from \"react\";\nimport \"./Home.css\";\nimport {Button} from 'react-bootstrap';\nimport socket from \"../socket\";\n\nclass Home extends Component{\n\n\n handleClick(e) {\n  e.preventDefault();\n\n  socket.emit('createGame', 'nodata');\n\n  socket.on('createGame',gameid => {\n    this.props.history.push('/table/'+gameid);\n  })\n\n}\n\nrender() {\n  return (\n    <div className=\"Home\">\n      <div className=\"lander\">\n        <h1>Neighborhood</h1>\n        <p>Play game with friends even when they're not in the neighborhood.</p>\n      </div>\n      <Button block bssize=\"large\" onClick={this.handleClick.bind(this)}>Start a Texas Hold'em Table</Button>\n    </div>\n  );\n}\n}\n\nexport default Home","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card'\nimport {Button} from \"react-bootstrap\";\nimport \"./Chevron.css\";\nimport socket from '../socket';\n\nclass PlayerChevron extends Component {\n\n\n  componentDidMount() {\n   \n\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n\n        const register = {\n\t\t\tgameHash: this.props.gameid,\n\t\t\tuserid: this.props.my_id,\n\t\t\tbalance: 100,\n\t\t\tstatus: 'playing',\n\t\t\tseat: this.props.id\n\t\t}\n        socket.emit('register', register);\n        socket.emit('startGame',{gameid:this.props.gameid});\n\n      \n  }\n\n\n\n\n    render() { \n        if(this.props.info=='empty') {\n            return ( \n                <Card id={'seat'+this.props.id} style={{ width: '14rem' }}>\n                    <Card.Body>\n                        <Card.Title>\n                        </Card.Title>\n                        <Button onClick={this.handleClick.bind(this)}>Sit</Button>\n                        <Card.Text>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n\n         );\n        }\n\n         else {\n            return ( \n                <Card id={'seat'+this.props.id} style={{ width: '14rem' }}>\n                    <Card.Body>\n                        <Card.Title>{this.props.info.userid}</Card.Title>\n                        <Card.Text>\n                            {this.props.info.balance}\n                        </Card.Text>\n                    </Card.Body>\n                    <div className=\"cards\">\n                        <div id=\"card1\"><img src={'/img/cards/'+this.props.info.card1+\".svg\"} width='75px' /></div>\n                        <div id=\"card2\"><img src={'/img/cards/'+this.props.info.card2+\".svg\"} width='75px' /></div>\n                    </div>\n                </Card>\n\n         );\n        }\n    }\n}\n\n\nexport default PlayerChevron;","import React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport axios from 'axios';\n\nexport default function Register(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n      console.log(email+password);\n    event.preventDefault();\n    axios.post('http://localhost:3000/register', {\n        email:email,\n        password:password,\n        name:name\n    }).then(response => {\n        console.log(response.data.ops[0]._id) \n            if(response.data) {\n                console.log('reg login')\n            }else {\n                console.log(\"Reg error\")\n            }\n        }\n    )\n}\n\n  return (\n    <div className=\"Register\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bssize=\"large\">\n        <FormLabel>Display Name</FormLabel>\n          <FormControl\n            autoFocus\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bssize=\"large\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block bssize=\"large\" disabled={!validateForm()} type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport { \n  Popover,\n  Tooltip,\n  Modal\n} from 'react-bootstrap';\nimport Register from './Register';\n\nclass RegisterModal extends React.Component {\n  constructor(props, context){\n    super(props, context);\n    this.handleRegShow = this.handleRegShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n        show: false\n    }\n}\n\nhandleRegShow() {\n    console.log(this.state)\n    this.setState({ show: true })\n}\nhandleClose(){\n    this.setState({ show: false })\n}\nrender() {\n\n    return (\n       <div>\n          <Modal show={this.state.show} onHide={this.handleClose}>\n             <Modal.Header closeButton>\n               <Modal.Title>Register</Modal.Title>\n             </Modal.Header>\n             <Modal.Body>\n               <Register></Register>\n             </Modal.Body>\n          </Modal>\n        </div>\n    )\n  }\n}\nexport default RegisterModal","import React, { Component } from 'react';\nimport { \n  Popover,\n  Tooltip,\n  Modal\n} from 'react-bootstrap';\nimport Login from './Login';\nimport Register from './Register';\nclass LoginModal extends React.Component {\n  constructor(props, context){\n    super(props, context);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n        show: false\n    }\n}\n\nhandleShow() {\n    console.log(this.state)\n    this.setState({ show: true })\n}\nhandleClose(){\n    this.setState({ show: false })\n}\nrender() {\n\n    return (\n       <div>\n          <Modal show={this.state.show} onHide={this.handleClose}>\n             <Modal.Header closeButton>\n               <Modal.Title>Login</Modal.Title>\n             </Modal.Header>\n             <Modal.Body>\n               <Login></Login>\n             </Modal.Body>\n          </Modal>\n        </div>\n    )\n  }\n}\nexport default LoginModal","import React, { Component } from 'react';\nimport {\n  Navbar, \n  NavItem,\n  Button,\n  Nav\n} from 'react-bootstrap';\nimport socket from '../../socket';\n\nclass FoldButton extends Component {\n\n\n \n handleClick(e) {\n    e.preventDefault();\n    var actionpackage = {gameid:this.props.gameid,\n                        hash:this.props.my_id,\n                        action:'fold'};\n    socket.emit('incomingAction',actionpackage);\n }\n\n\n\n    render() { \n        return (\n        <div>\n            <Button onClick={this.handleClick.bind(this)}>Fold</Button>\n        </div> );\n    }\n}\n \nexport default FoldButton;","import React, { Component } from 'react';\nimport {\n  Navbar, \n  NavItem,\n  Button,\n  Nav\n} from 'react-bootstrap';\nimport socket from '../../socket';\n\nclass FoldButton extends Component {\n\n\n \n handleClick(e) {\n    e.preventDefault();\n    var actionpackage = {gameid:this.props.gameid,\n                        hash:this.props.my_id,\n                        action:'fold'};\n    socket.emit('incomingAction',actionpackage);\n }\n\n\n\n    render() { \n        return (\n        <div>\n            <Button onClick={this.handleClick.bind(this)}>Fold</Button>\n        </div> );\n    }\n}\n \nexport default FoldButton;","import React, { Component } from 'react';\nimport {\n  Navbar, \n  NavItem,\n  Button,\n  Nav\n} from 'react-bootstrap';\nimport socket from '../../socket';\n\nclass CallButton extends Component {\n\n\n \n handleClick(e) {\n    e.preventDefault();\n    var actionpackage = {gameid:this.props.gameid,\n                        hash:this.props.my_id,\n                        action:'call'};\n    socket.emit('incomingAction',actionpackage);\n }\n\n\n\n    render() { \n        return (\n        <div>\n            <Button onClick={this.handleClick.bind(this)}>Call</Button>\n        </div> );\n    }\n}\n \nexport default CallButton;","import React, { Component } from 'react';\nimport {\n  Navbar, \n  NavItem,\n  Button,\n  Nav\n} from 'react-bootstrap';\nimport socket from '../../socket';\n\nclass RaiseButton extends Component {\n\n\n \n handleClick(e) {\n    e.preventDefault();\n    var actionpackage = {gameid:this.props.gameid,\n                        hash:this.props.my_id,\n                        action:'raise',\n                        amt:10};\n    socket.emit('incomingAction',actionpackage);\n }\n\n\n\n    render() { \n        return (\n        <div>\n            <Button onClick={this.handleClick.bind(this)}>Raise</Button>\n        </div> );\n    }\n}\n \nexport default RaiseButton;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport RegisterModal from './RegisterModal';\nimport LoginModal from './LoginModal';\nimport {\n  Navbar, \n  NavItem,\n  Button,\n  Nav\n} from 'react-bootstrap';\nimport FoldButton from './ActionButtons/FoldButton';\nimport CheckButton from './ActionButtons/CheckButton';\nimport CallButton from './ActionButtons/CallButton';\nimport RaiseButton from './ActionButtons/RaiseButton';\nimport './ActionBar.css'\n\n\nclass ActionBar extends Component {\n  constructor(props) {\n    super(props);  \n\n  }\n\n    render() { \n      if(this.props.actions.length==3)\n        return (\n        <div>\n          <div id='ButtonContainer' className=\"mb-2\">\n            <FoldButton my_id={this.props.my_id} gameid={this.props.gameid}></FoldButton>\n            <CallButton my_id={this.props.my_id} gameid={this.props.gameid}></CallButton>\n            <RaiseButton my_id={this.props.my_id} gameid={this.props.gameid}></RaiseButton>\n            </div>\n        </div> );\n      else if (this.props.actions.length == 2 && this.props.actions[0]=='check')\n      return (\n        <div>\n          <div id='ButtonContainer' className=\"mb-2\">\n            <CheckButton my_id={this.props.my_id} gameid={this.props.gameid}></CheckButton>\n            <RaiseButton my_id={this.props.my_id} gameid={this.props.gameid}></RaiseButton>            \n            </div>\n        </div> );\n      else if (this.props.actions.length == 2 && this.props.actions[0]=='fold')\n      return (\n        <div>\n          <div id='ButtonContainer' className=\"mb-2\">\n            <FoldButton my_id={this.props.my_id} gameid={this.props.gameid}></FoldButton>\n            <RaiseButton my_id={this.props.my_id} gameid={this.props.gameid}></RaiseButton>\n            </div>\n        </div> );\n        else\n          return (<div></div>);\n    }\n}\n \nexport default ActionBar;","import React, { Component } from \"react\";\nimport \"./Table.css\";\nimport PlayerChevron from \"../components/PlayerChevron\"\nimport ActionBar from \"../components/ActionBar\"\nimport socket from '../socket'\n\n\nclass Table extends Component{\n  constructor() {\n  super();\n  this.state = {\n    gameid:null,\n    actions:[],\n    seats: []\n  }\n    \n  };\n   \ncomponentDidMount() {\n      var gameid = window.location.pathname.slice(7)\n\n      this.setState({gameid:gameid}, (res) => {\n        socket.emit('seatList', this.state.gameid);\n\n      } )\n      \n\n      socket.on('publicSeatList', (publicData) => {\n    //console.log(\"incoming update \" + publicData);\n    const data = JSON.parse(publicData);\n      if(data.gameid==this.state.gameid) {\n      \n      this.setState({gameData:data});  \n      this.setState({seats: data.seats});\n      }\n    });\n\n\n    socket.on('update', (privateData) => {\n      //console.log(\"incoming update \" + privateData);\n\n        const data = JSON.parse(privateData);\n        this.setState({gameData:data});\n        this.setState({seats: data.seats});\n        console.log(data);\n        if(data.bettingRound.actionOn!=null){\n          if(data.bettingRound.actionOn.hash==this.state.my_id) {\n            this.setState({actions:data.bettingRound.nextActionsAvailable})\n          }\n          else\n          this.setState({actions:['fold','call','raise']});\n        }\n        else {\n          this.setState({actions:['fold','call','raise']});\n        }\n      });\n}\n\n        \nrender () {\n\n  return (\n    <div id='Table' className=\"Table\">\n        {this.state.seats.map((seat,i) => {\n            return <PlayerChevron id={i} info={this.state.seats[i]} gameid={this.state.gameid} my_id={this.props.my_id}></PlayerChevron>\n        })}\n      <div id='ActionBar'>\n        <ActionBar actions={this.state.actions} my_id={this.props.my_id} gameid={this.state.gameid}></ActionBar>\n      </div> \n    </div>\n  );\n    }\n}\n\nexport default Table","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport RegisterModal from './RegisterModal';\nimport LoginModal from './LoginModal';\nimport {\n  Navbar, \n  NavItem,\n  Button,\n  Nav\n} from 'react-bootstrap';\n\nclass MyNav extends Component {\n\n\n  loginModalRef = ({handleShow}) => {\n    this.showModal = handleShow;\n }\n\n \n onLoginClick = () => {\n   this.showModal();\n }\n\n\n\n    render() { \n      let button;\n      if(this.props.my_id==null){\n        button= <Button onClick={this.onLoginClick}>Login</Button>\n      }\n      else {\n        button = <div>\n                    Hi,{this.props.my_id} <a href=\"/logout\">Logout</a>\n                </div>\n      }\n        return (\n        <Navbar>\n            <LoginModal ref={this.loginModalRef} ></LoginModal>\n            <Navbar.Brand href=\"#home\">Clint Do-Me Son's Poker Dojo</Navbar.Brand>\n            <Navbar.Toggle />\n              <Navbar.Collapse className=\"justify-content-end\">\n                {button}\n              </Navbar.Collapse>\n          </Navbar>);\n    }\n}\n \nexport default MyNav;","import React, { Component } from \"react\";\nimport * as serviceWorker from './serviceWorker';\nimport MyRoutes from \"./Routes\";\nimport MyNav from './components/Nav';\nimport axios from 'axios';\nimport Table from './containers/Table';\nimport PlayerChevron from './components/PlayerChevron';\nimport socket from './socket';\nimport './App.css';\nimport { Route,Switch,Link } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Login from \"./components/Login\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      logged_in: false,\n      my_id: null,\n      gameData: {},\n      seats: [],\n      actions: ['fold','call','raise']\n      \n    };\n\n\n  \n\n  }\n\n\n\n\n  componentDidMount() {\n\n    \n    //get id\n    socket.emit('handshake', 'give me my id');\n    socket.on('handshake', (_id) => {\n      //console.log(\"incoming update \" + privateData);\n        console.log(\"My ID is:\"+_id);\n        this.setState({my_id:_id})\n      });\n      //SETUP TEST GAME\n      var gameid;\n      socket.emit('createGame', 'no data');\n      socket.on('createGame', (game_id) => {\n          console.log(\"Game ID is:\"+game_id);\n          this.setState({game_id:game_id})\n          gameid=game_id;\n        });\n\n        var register = {\n          gameHash: 'fart',\n          userid: '5e83a80f4aeeda2c0a258d4f',\n          balance: 100,\n          status: 'playing',\n          seat: 0\n        };\n        socket.emit('register', register);\n         register = {\n          gameHash: 'fart',\n          userid: '5e83aa2c8391902cc37073b9',\n          balance: 100,\n          status: 'playing',\n          seat: 1\n        };\n        socket.emit('register', register);\n\n\n   \n     \n    \n  }\n\n\n\n  render() {\n    return (\n\n      <div className=\"App container\">\n        <MyNav my_id={this.state.my_id}>\n            <Link to=\"/\">Scratch</Link>\n        </MyNav>\n        \n        <Switch>\n            <Route path=\"/\" exact exact exact render={(props) =><Home {...props} />} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/table/*\" exact render={(props) => <Table my_id={this.state.my_id} gameData={this.state.gameData} seats={this.state.seats} actions={this.state.actions}\n            {...props}  />} />\n        </Switch>\n    </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\n\nReactDOM.render(\n     <Router>\n           <App />\n      </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}