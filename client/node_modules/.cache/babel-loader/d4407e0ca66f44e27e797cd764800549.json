{"ast":null,"code":"var _jsxFileName = \"/Users/michaelehinger/poker-client/client/src/components/ActionBar.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport RegisterModal from './RegisterModal';\nimport LoginModal from './LoginModal';\nimport { Navbar, NavItem, Button, Nav } from 'react-bootstrap';\n\nclass ActionBar extends Component {\n  constructor() {\n    super();\n\n    this.loginModalRef = ({\n      handleShow\n    }) => {\n      this.showModal = handleShow;\n    };\n\n    this.onLoginClick = () => {\n      this.showModal();\n    };\n\n    const buttons = [];\n  }\n\n  componentDidMount() {\n    var tempbuttons = [];\n\n    if (this.props.actions) {\n      for (var i = 0; i < this.props.actions.length; i++) {\n        if (this.props.actions[i] == 'fold') tempbuttons.push( /*#__PURE__*/React.createElement(Button, {\n          id: \"fold\",\n          variant: \"primary\",\n          size: \"lg\",\n          onClick: this.fold(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 27\n          }\n        }, \"Fold\"));\n        if (this.props.actions[i] == 'check') tempbuttons.push( /*#__PURE__*/React.createElement(Button, {\n          id: \"check\",\n          variant: \"primary\",\n          size: \"lg\",\n          onClick: this.handleClick('fold'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 27\n          }\n        }, \"Check\"));\n        if (this.props.actions[i] == 'call') tempbuttons.push( /*#__PURE__*/React.createElement(Button, {\n          id: \"call\",\n          variant: \"primary\",\n          size: \"lg\",\n          onClick: this.handleClick('fold'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 27\n          }\n        }, \"Call\"));\n        if (this.props.actions[i] == 'raise') tempbuttons.push( /*#__PURE__*/React.createElement(Button, {\n          id: \"raise\",\n          variant: \"primary\",\n          size: \"lg\",\n          onClick: this.handleClick('fold'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 28\n          }\n        }, \"Raise\"));\n      }\n    }\n\n    this.buttons = tempbuttons;\n    console.log(this.buttons);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    console.log(id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, this.buttons));\n  }\n\n}\n\nexport default ActionBar;","map":{"version":3,"sources":["/Users/michaelehinger/poker-client/client/src/components/ActionBar.jsx"],"names":["React","Component","ReactDOM","RegisterModal","LoginModal","Navbar","NavItem","Button","Nav","ActionBar","constructor","loginModalRef","handleShow","showModal","onLoginClick","buttons","componentDidMount","tempbuttons","props","actions","i","length","push","fold","handleClick","console","log","e","preventDefault","id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport RegisterModal from './RegisterModal';\nimport LoginModal from './LoginModal';\nimport {\n  Navbar, \n  NavItem,\n  Button,\n  Nav\n} from 'react-bootstrap';\n\nclass ActionBar extends Component {\n  constructor() {\n    super();  \n    const buttons = [];\n  }\n\n  componentDidMount() {\n    var tempbuttons = [];\n\n    if(this.props.actions) {\n      for(var i=0; i<this.props.actions.length;i++) {\n        if(this.props.actions[i]=='fold')\n         tempbuttons.push(<Button id='fold' variant='primary' size='lg' onClick={this.fold()}>Fold</Button>)\n        if(this.props.actions[i]=='check')\n         tempbuttons.push(<Button id='check' variant='primary' size='lg' onClick={this.handleClick('fold')}>Check</Button>)\n        if(this.props.actions[i]=='call')\n         tempbuttons.push(<Button id='call' variant='primary' size='lg' onClick={this.handleClick('fold')}>Call</Button>)\n        if(this.props.actions[i]=='raise')\n          tempbuttons.push(<Button id='raise' variant='primary' size='lg' onClick={this.handleClick('fold')}>Raise</Button>)\n        }\n    }\n    this.buttons = tempbuttons;\n    console.log(this.buttons);\n  }\n\n\n  loginModalRef = ({handleShow}) => {\n    this.showModal = handleShow;\n }\n\n \n onLoginClick = () => {\n   this.showModal();\n }\n\n handleClick(e) {\n  e.preventDefault();\nconsole.log(id);\n\n }\n\n    render() { \n        return (\n        <div>\n            <div className=\"mb-2\">\n                {this.buttons}\n            </div>\n        </div> );\n    }\n}\n \nexport default ActionBar;"]},"metadata":{},"sourceType":"module"}