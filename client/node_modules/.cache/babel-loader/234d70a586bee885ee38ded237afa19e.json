{"ast":null,"code":"var _jsxFileName = \"/Users/michaelehinger/poker-client/client/src/containers/Table.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Table.css\";\nimport PlayerChevron from \"../components/PlayerChevron\";\nimport ActionBar from \"../components/ActionBar\";\nimport socket from '../socket';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.state = {\n      actions: ['fold', 'call', 'raise']\n    };\n  }\n\n  componentDidMount() {\n    var gameid = window.location.pathname.slice(7);\n    socket.emit('seatList', gameid);\n    socket.on('publicSeatList', publicData => {\n      //console.log(\"incoming update \" + privateData);\n      const data = JSON.parse(publicData);\n      this.setState({\n        gameData: data\n      });\n      this.setState({\n        seats: data.seats\n      });\n    });\n    socket.on('update', privateData => {\n      //console.log(\"incoming update \" + privateData);\n      const data = JSON.parse(privateData);\n      this.setState({\n        gameData: data\n      });\n      this.setState({\n        seats: data.seats\n      });\n      console.log(data);\n\n      if (data.bettingRound.actionOn != null) {\n        if (data.bettingRound.actionOn.hash == this.state.my_id) {\n          this.setState({\n            actions: data.bettingRound.nextActionsAvailable\n          });\n        } else this.setState({\n          actions: ['fold', 'call', 'raise']\n        });\n      } else {\n        this.setState({\n          actions: ['fold', 'call', 'raise']\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Table\",\n      className: \"Table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, this.props.seats.map((seat, i) => {\n      return /*#__PURE__*/React.createElement(PlayerChevron, {\n        id: i,\n        info: this.state.seats[i],\n        gameid: this.state.gameData.gameid,\n        my_id: this.props.my_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ActionBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ActionBar, {\n      actions: this.state.actions,\n      my_id: this.props.my_id,\n      gameid: this.state.gameData.gameid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/michaelehinger/poker-client/client/src/containers/Table.jsx"],"names":["React","Component","PlayerChevron","ActionBar","socket","Table","constructor","state","actions","componentDidMount","gameid","window","location","pathname","slice","emit","on","publicData","data","JSON","parse","setState","gameData","seats","privateData","console","log","bettingRound","actionOn","hash","my_id","nextActionsAvailable","render","props","map","seat","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Table.css\";\nimport PlayerChevron from \"../components/PlayerChevron\"\nimport ActionBar from \"../components/ActionBar\"\nimport socket from '../socket'\n\n\nclass Table extends Component{\n  constructor() {\n  super();\n  this.state = {\n    actions: ['fold','call','raise']\n  }\n    \n  };\n   \ncomponentDidMount() {\n      var gameid = window.location.pathname.slice(7)\n      socket.emit('seatList', gameid);\n\n      socket.on('publicSeatList', (publicData) => {\n    //console.log(\"incoming update \" + privateData);\n      const data = JSON.parse(publicData);\n      this.setState({gameData:data});  \n      this.setState({seats: data.seats});\n    });\n\n\n    socket.on('update', (privateData) => {\n      //console.log(\"incoming update \" + privateData);\n\n        const data = JSON.parse(privateData);\n        this.setState({gameData:data});\n        this.setState({seats: data.seats});\n        console.log(data);\n        if(data.bettingRound.actionOn!=null){\n          if(data.bettingRound.actionOn.hash==this.state.my_id) {\n            this.setState({actions:data.bettingRound.nextActionsAvailable})\n          }\n          else\n          this.setState({actions:['fold','call','raise']});\n        }\n        else {\n          this.setState({actions:['fold','call','raise']});\n        }\n      });\n}\n\n        \nrender () {\n\n  return (\n    <div id='Table' className=\"Table\">\n        {this.props.seats.map((seat,i) => {\n            return <PlayerChevron id={i} info={this.state.seats[i]} gameid={this.state.gameData.gameid} my_id={this.props.my_id}></PlayerChevron>\n        })}\n      <div id='ActionBar'>\n        <ActionBar actions={this.state.actions} my_id={this.props.my_id} gameid={this.state.gameData.gameid}></ActionBar>\n      </div> \n    </div>\n  );\n    }\n}\n\nexport default Table"]},"metadata":{},"sourceType":"module"}