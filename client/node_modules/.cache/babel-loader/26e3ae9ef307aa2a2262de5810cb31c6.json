{"ast":null,"code":"var _jsxFileName = \"/Users/michaelehinger/poker-client/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport * as serviceWorker from './serviceWorker';\nimport Routes from \"./Routes\";\nimport MyNav from './components/Nav';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport Table from './containers/Table';\nimport PlayerChevron from './components/PlayerChevron';\nimport socket from './socket';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      logged_in: false,\n      my_id: null,\n      gameData: {},\n      seats: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      actions: 'test'\n    }); //get id\n\n    socket.emit('handshake', 'give me my id');\n    socket.on('handshake', _id => {\n      //console.log(\"incoming update \" + privateData);\n      console.log(\"My ID is:\" + _id);\n      this.setState({\n        my_id: _id\n      });\n    }); //SETUP TEST GAME\n\n    var gameid;\n    socket.emit('createGame', 'no data');\n    socket.on('createGame', game_id => {\n      console.log(\"Game ID is:\" + game_id);\n      this.setState({\n        game_id: game_id\n      });\n      gameid = game_id;\n    });\n    var register = {\n      gameHash: 'fart',\n      userid: '5e83a80f4aeeda2c0a258d4f',\n      balance: 100,\n      status: 'playing',\n      seat: 0\n    };\n    socket.emit('register', register);\n    register = {\n      gameHash: 'fart',\n      userid: '5e83aa2c8391902cc37073b9',\n      balance: 100,\n      status: 'playing',\n      seat: 1\n    };\n    socket.emit('register', register);\n    socket.emit('seatList', 'fart');\n    socket.on('publicSeatList', publicData => {\n      //console.log(\"incoming update \" + privateData);\n      const data = JSON.parse(publicData);\n      this.setState({\n        gameData: data\n      });\n      this.setState({\n        seats: data.seats\n      });\n    });\n    socket.on('update', privateData => {\n      //console.log(\"incoming update \" + privateData);\n      console.log('set act34ions');\n      const data = JSON.parse(privateData);\n      console.log(data);\n      this.setState({\n        gameData: data\n      });\n      this.setState({\n        seats: data.seats\n      });\n\n      if (data.bettingRound.actionOn != null) {\n        console.log(data.bettingRound.actionOn.hash);\n\n        if (data.bettingRound.actionOn.hash == this.state.my_id) {\n          this.setState({\n            actions: data.bettingRound.nextActionsAvailable\n          });\n        } else this.setState({\n          actions: ['fold', 'call', 'raise']\n        });\n      } else {\n        this.setState({\n          actions: ['fold', 'call', 'raise']\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MyNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Scratch\")), /*#__PURE__*/React.createElement(Table, {\n      seats: this.state.seats,\n      gameData: this.state.gameData,\n      my_id: this.state.my_id,\n      actions: this.state.actions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Routes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/michaelehinger/poker-client/client/src/App.js"],"names":["React","Component","serviceWorker","Routes","MyNav","Link","axios","Table","PlayerChevron","socket","App","constructor","state","logged_in","my_id","gameData","seats","componentDidMount","setState","actions","emit","on","_id","console","log","gameid","game_id","register","gameHash","userid","balance","status","seat","publicData","data","JSON","parse","privateData","bettingRound","actionOn","hash","nextActionsAvailable","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as serviceWorker from './serviceWorker';\nimport Routes from \"./Routes\";\nimport MyNav from './components/Nav';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport Table from './containers/Table';\nimport PlayerChevron from './components/PlayerChevron';\nimport socket from './socket';\nimport './App.css';\n\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      logged_in: false,\n      my_id: null,\n      gameData: {},\n      seats: []\n      \n    };\n\n\n  \n\n  }\n\n\n\n\n  componentDidMount() {\n\n    this.setState({actions:'test'});\n    //get id\n    socket.emit('handshake', 'give me my id');\n    socket.on('handshake', (_id) => {\n      //console.log(\"incoming update \" + privateData);\n        console.log(\"My ID is:\"+_id);\n        this.setState({my_id:_id})\n      });\n      //SETUP TEST GAME\n      var gameid;\n      socket.emit('createGame', 'no data');\n      socket.on('createGame', (game_id) => {\n          console.log(\"Game ID is:\"+game_id);\n          this.setState({game_id:game_id})\n          gameid=game_id;\n        });\n\n        var register = {\n          gameHash: 'fart',\n          userid: '5e83a80f4aeeda2c0a258d4f',\n          balance: 100,\n          status: 'playing',\n          seat: 0\n        };\n        socket.emit('register', register);\n         register = {\n          gameHash: 'fart',\n          userid: '5e83aa2c8391902cc37073b9',\n          balance: 100,\n          status: 'playing',\n          seat: 1\n        };\n        socket.emit('register', register);\n\n\n    socket.emit('seatList', 'fart');\n    socket.on('publicSeatList', (publicData) => {\n      //console.log(\"incoming update \" + privateData);\n        const data = JSON.parse(publicData);\n        this.setState({gameData:data});  \n        this.setState({seats: data.seats});\n      });\n\n      socket.on('update', (privateData) => {\n        //console.log(\"incoming update \" + privateData);\n        console.log('set act34ions');\n\n          const data = JSON.parse(privateData);\n          console.log(data);\n          this.setState({gameData:data});\n          this.setState({seats: data.seats});\n\n          if(data.bettingRound.actionOn!=null){\n            console.log(data.bettingRound.actionOn.hash);\n            if(data.bettingRound.actionOn.hash==this.state.my_id) {\n              this.setState({actions:data.bettingRound.nextActionsAvailable})\n              \n            }\n            else\n            this.setState({actions:['fold','call','raise']});\n          }\n          else {\n            this.setState({actions:['fold','call','raise']});\n          }\n        });\n    \n  }\n\n\n\n  render() {\n    \n    return (\n\n      <div className=\"App container\">\n        <MyNav>\n            <Link to=\"/\">Scratch</Link>\n        </MyNav>\n        <Table seats={this.state.seats} \n        gameData={this.state.gameData} \n        my_id={this.state.my_id} \n        actions={this.state.actions} />\n        <Routes />\n    </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}