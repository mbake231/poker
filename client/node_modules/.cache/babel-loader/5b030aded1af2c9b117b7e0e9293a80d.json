{"ast":null,"code":"var _jsxFileName = \"/Users/michaelehinger/poker-client/client/src/components/ActionBar.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport RegisterModal from './RegisterModal';\nimport LoginModal from './LoginModal';\nimport { Navbar, NavItem, Button, Nav } from 'react-bootstrap';\nimport FoldButton from './ActionButtons/FoldButton';\nimport CheckButton from './ActionButtons/CheckButton';\nimport CallButton from './ActionButtons/CallButton';\nimport RaiseButton from './ActionButtons/RaiseButton';\n\nclass ActionBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loginModalRef = ({\n      handleShow\n    }) => {\n      this.showModal = handleShow;\n    };\n\n    this.onLoginClick = () => {\n      this.showModal();\n    };\n\n    const buttons = [];\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    var tempbuttons = [];\n\n    if (this.props.actions) {\n      for (var i = 0; i < this.props.actions.length; i++) {\n        console.log('log' + this.props.my_id);\n        if (this.props.actions[i] == 'fold') tempbuttons.push( /*#__PURE__*/React.createElement(FoldButton, {\n          my_id: this.props.my_id,\n          gameid: this.props.gameid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 27\n          }\n        }));\n        if (this.props.actions[i] == 'check') tempbuttons.push( /*#__PURE__*/React.createElement(CheckButton, {\n          my_id: this.props.my_id,\n          gameid: this.props.gameid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 27\n          }\n        }));\n        if (this.props.actions[i] == 'call') tempbuttons.push( /*#__PURE__*/React.createElement(CallButton, {\n          my_id: this.props.my_id,\n          gameid: this.props.gameid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 27\n          }\n        }));\n        if (this.props.actions[i] == 'raise') tempbuttons.push( /*#__PURE__*/React.createElement(RaiseButton, {\n          my_id: this.props.my_id,\n          gameid: this.props.gameid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 28\n          }\n        }));\n      }\n    }\n\n    this.buttons = tempbuttons;\n    console.log(this.buttons);\n  }\n\n  fold() {\n    console.log('fold');\n  }\n\n  handleClick() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FoldButton, {\n      my_id: this.props.my_id,\n      gameid: this.props.gameid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, this.buttons));\n  }\n\n}\n\nexport default ActionBar;","map":{"version":3,"sources":["/Users/michaelehinger/poker-client/client/src/components/ActionBar.jsx"],"names":["React","Component","ReactDOM","RegisterModal","LoginModal","Navbar","NavItem","Button","Nav","FoldButton","CheckButton","CallButton","RaiseButton","ActionBar","constructor","props","loginModalRef","handleShow","showModal","onLoginClick","buttons","componentDidMount","bind","tempbuttons","actions","i","length","console","log","my_id","push","gameid","fold","handleClick","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport RegisterModal from './RegisterModal';\nimport LoginModal from './LoginModal';\nimport {\n  Navbar, \n  NavItem,\n  Button,\n  Nav\n} from 'react-bootstrap';\nimport FoldButton from './ActionButtons/FoldButton';\nimport CheckButton from './ActionButtons/CheckButton';\nimport CallButton from './ActionButtons/CallButton';\nimport RaiseButton from './ActionButtons/RaiseButton';\n\n\nclass ActionBar extends Component {\n  constructor(props) {\n    super(props);  \n    const buttons = [];\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    var tempbuttons = [];\n\n    if(this.props.actions) {\n      for(var i=0; i<this.props.actions.length;i++) {\n        console.log('log'+this.props.my_id);\n        if(this.props.actions[i]=='fold')\n         tempbuttons.push(<FoldButton my_id={this.props.my_id} gameid={this.props.gameid}></FoldButton>)\n        if(this.props.actions[i]=='check')\n         tempbuttons.push(<CheckButton my_id={this.props.my_id} gameid={this.props.gameid}></CheckButton>)\n        if(this.props.actions[i]=='call')\n         tempbuttons.push(<CallButton my_id={this.props.my_id} gameid={this.props.gameid}></CallButton>)\n        if(this.props.actions[i]=='raise')\n          tempbuttons.push(<RaiseButton my_id={this.props.my_id} gameid={this.props.gameid}></RaiseButton>)\n        }\n    }\n    this.buttons = tempbuttons;\n    console.log(this.buttons);\n  }\n\n\n  loginModalRef = ({handleShow}) => {\n    this.showModal = handleShow;\n }\n\n fold() {\n   console.log('fold');\n }\n\n \n onLoginClick = () => {\n   this.showModal();\n }\n\n handleClick() {\n\n }\n\n    render() { \n        return (\n        <div>\n            <FoldButton my_id={this.props.my_id} gameid={this.props.gameid}></FoldButton>\n            <div className=\"mb-2\">\n                {this.buttons}\n            </div>\n        </div> );\n    }\n}\n \nexport default ActionBar;"]},"metadata":{},"sourceType":"module"}