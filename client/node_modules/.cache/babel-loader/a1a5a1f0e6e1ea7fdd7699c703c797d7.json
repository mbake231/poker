{"ast":null,"code":"var _jsxFileName = \"/Users/michaelehinger/poker-client/client/src/components/Register.jsx\";\nimport React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport axios from 'axios';\nexport default function Register(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    console.log(email + password);\n    event.preventDefault();\n    axios.post('http://localhost:3000/register', {\n      email: email,\n      password: password,\n      name: name\n    }).then(response => {\n      console.log(response.data.ops[0]._id);\n\n      if (response.data) {\n        console.log('reg login');\n      } else {\n        console.log(\"Reg error\");\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"email\",\n    bssize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Display Name\"), /*#__PURE__*/React.createElement(FormControl, {\n    autoFocus: true,\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"password\",\n    bssize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    bssize: \"large\",\n    disabled: !validateForm(),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n}","map":{"version":3,"sources":["/Users/michaelehinger/poker-client/client/src/components/Register.jsx"],"names":["React","useState","Button","FormGroup","FormControl","FormLabel","axios","Register","props","email","setEmail","password","setPassword","name","setName","validateForm","length","handleSubmit","event","console","log","preventDefault","post","then","response","data","ops","_id","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport axios from 'axios';\n\nexport default function Register(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n      console.log(email+password);\n    event.preventDefault();\n    axios.post('http://localhost:3000/register', {\n        email:email,\n        password:password,\n        name:name\n    }).then(response => {\n        console.log(response.data.ops[0]._id) \n            if(response.data) {\n                console.log('reg login')\n            }else {\n                console.log(\"Reg error\")\n            }\n        }\n    )\n}\n\n  return (\n    <div className=\"Register\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bssize=\"large\">\n        <FormLabel>Display Name</FormLabel>\n          <FormControl\n            autoFocus\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bssize=\"large\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block bssize=\"large\" disabled={!validateForm()} type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}